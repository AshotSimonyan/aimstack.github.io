{"pageProps":{"posts":[{"title":"How to Install Go language in Raspberry pi 4 and Ubuntu?","date":"2022-03-15T10:59:50.000Z","author":"Rajdeep Singh","description":"","slug":"how-to-install-go-language-in-raspberry-pi-4-and-ubuntu","id":6,"image":"/images/install-go-langauge.png","draft":false,"tags":["go language","Linux","Raspberry pi 4","Ubuntu","install go language"],"categories":["go language","Linux","Raspberry pi 4","Ubuntu","install go language"],"body":{"raw":"\n\nYou install go language in raspberry pi 4, Ubuntu and Linux. The go language installation process is similar for all the Linux distros.\n\nThere is two way to install the go language in raspberry pi 4.\n\n1. Snap\n2. Command-line\n\n### Snap\n\nWith the help of the [Snap store](https://snapcraft.io/go), the easy way to install Go language in Raspberry pi 4 and ubuntu.\n\nSimple you paste only one snap command in raspberry pi 4, and your go language install and config path automatics in raspberry pi 4.\n\n```Command\nsudo snap install go --classic\n```\n\n[Install Go language raspberry pi and ubuntu](images/2022/03/carbon--3-.png)\n\n> https://snapcraft.io/go\n\n### Note\n\n> Install the go lang with Snap. Firstly, install snap cli in raspberry pi 4, and Ubuntu comes pre-install with a snap cli.\n\n---\n\n### Command-line\n\nThe command-line provides both armhf and armd binary format of go language. Moreover, the command line utility helps the config everything inside raspberry pi 4 and ubuntu.\n\n```\nsudo apt-get install golang-go\n```\n\n[Install go language with apt-get in raspberry pi and ubuntu](images/carbon--5-.png)\n\n---\n\n### Check the go language version in raspberry pi 4 and ubuntu.\n\n```\ngo version\n```\n\n[Check go language version in the terminal](images/carbon--6--1.png)\n\n\n\n---\n\n### How to remove the go language package?\n\n* Snap\n* command-line\n\n### Snap\n\nRemove all the go language configurations and packages in Raspberry pi 4 and ubuntu.\n\n```\nsnap remove go\n```\n[remove go language](images/2022/03/carbon--4-.png)\n\n### Note\n\n> If you install go with a snap then you remove go with a snap.\n\n\n\n### Command-line\n\nRemove or uninstall the go language package with all configuration use of the apt-get command.\n\n```command\nsudo apt-get purge golang-go\n```\n\n\n\n---\n\n### Conclusion\n\nI hope my article helps you. I'm not the go lang developer.\n\n\n\n","html":"<p>You install go language in raspberry pi 4, Ubuntu and Linux. The go language installation process is similar for all the Linux distros.</p>\n<p>There is two way to install the go language in raspberry pi 4.</p>\n<ol>\n<li>Snap</li>\n<li>Command-line</li>\n</ol>\n<h3>Snap</h3>\n<p>With the help of the <a href=\"https://snapcraft.io/go\">Snap store</a>, the easy way to install Go language in Raspberry pi 4 and ubuntu.</p>\n<p>Simple you paste only one snap command in raspberry pi 4, and your go language install and config path automatics in raspberry pi 4.</p>\n<pre><code class=\"language-Command\">sudo snap install go --classic\n</code></pre>\n<p><a href=\"images/2022/03/carbon--3-.png\">Install Go language raspberry pi and ubuntu</a></p>\n<blockquote>\n<p>https://snapcraft.io/go</p>\n</blockquote>\n<h3>Note</h3>\n<blockquote>\n<p>Install the go lang with Snap. Firstly, install snap cli in raspberry pi 4, and Ubuntu comes pre-install with a snap cli.</p>\n</blockquote>\n<hr>\n<h3>Command-line</h3>\n<p>The command-line provides both armhf and armd binary format of go language. Moreover, the command line utility helps the config everything inside raspberry pi 4 and ubuntu.</p>\n<pre><code>sudo apt-get install golang-go\n</code></pre>\n<p><a href=\"images/carbon--5-.png\">Install go language with apt-get in raspberry pi and ubuntu</a></p>\n<hr>\n<h3>Check the go language version in raspberry pi 4 and ubuntu.</h3>\n<pre><code>go version\n</code></pre>\n<p><a href=\"images/carbon--6--1.png\">Check go language version in the terminal</a></p>\n<hr>\n<h3>How to remove the go language package?</h3>\n<ul>\n<li>Snap</li>\n<li>command-line</li>\n</ul>\n<h3>Snap</h3>\n<p>Remove all the go language configurations and packages in Raspberry pi 4 and ubuntu.</p>\n<pre><code>snap remove go\n</code></pre>\n<p><a href=\"images/2022/03/carbon--4-.png\">remove go language</a></p>\n<h3>Note</h3>\n<blockquote>\n<p>If you install go with a snap then you remove go with a snap.</p>\n</blockquote>\n<h3>Command-line</h3>\n<p>Remove or uninstall the go language package with all configuration use of the apt-get command.</p>\n<pre><code class=\"language-command\">sudo apt-get purge golang-go\n</code></pre>\n<hr>\n<h3>Conclusion</h3>\n<p>I hope my article helps you. I'm not the go lang developer.</p>"},"_id":"posts/how-to-install-go-language-in-raspberry-pi-4-and-ubuntu.md","_raw":{"sourceFilePath":"posts/how-to-install-go-language-in-raspberry-pi-4-and-ubuntu.md","sourceFileName":"how-to-install-go-language-in-raspberry-pi-4-and-ubuntu.md","sourceFileDir":"posts","contentType":"markdown","flattenedPath":"posts/how-to-install-go-language-in-raspberry-pi-4-and-ubuntu"},"type":"Post"},{"title":"How to install rust language in raspberry pi 4 and ubuntu?","date":"2022-03-17T07:05:24.000Z","author":"Rajdeep Singh","description":"","slug":"how-to-install-rust-language-in-raspberry-pi-4-and-ubuntu","id":9,"image":"/images/install-Rust-langauge.png","draft":false,"tags":["Rust","Linux","Raspberry pi 4","Install Rust in Linux","Ubuntu"],"categories":["Rust","Linux","Raspberry pi 4","Install Rust in Linux","Ubuntu"],"body":{"raw":"\n\nInstallation of Rust in raspberry pi 4 and Ubuntu is a very easy process for all  Linux distros. You can install Rust with one single command. So simple, you copy and paste in your terminal.\n\n### Install Rust\n\n```command\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\nAfter you paste the command in a terminal, the rust setup asks one question to start the installation rust in your distro.\n\n```\nrajdeepsingh@rajdeepsingh:/$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\ninfo: downloading installer\nWelcome to Rust!\n....\nCurrent installation options:\ndefault host triple: aarch64-unknown-linux-gnu\n     default toolchain: stable (default)\n               profile: default\n  modify PATH variable: yes\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n> 1\n```\n\nI select default rust installation in raspberry pi 4. so everything is mange by rust lang.\n\n### The rust command output\n\n```\nrajdeepsingh@officialrajdeepsingh:/$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\ninfo: downloading installer\nWelcome to Rust!\nThis will download and install the official compiler for the Rust\nprogramming language, and its package manager, Cargo.\nRustup metadata and toolchains will be installed into the Rustup\nhome directory, located at:\n/home/rajdeepsingh/.rustup\nThis can be modified with the RUSTUP_HOME environment variable.\nThe Cargo home directory located at:\n/home/rajdeepsingh/.cargo\nThis can be modified with the CARGO_HOME environment variable.\nThe cargo, rustc, rustup and other commands will be added to\nCargo's bin directory, located at:\n/home/rajdeepsingh/.cargo/bin\nThis path will then be added to your PATH environment variable by\nmodifying the profile files located at:\n/home/rajdeepsingh/.profile\n  /home/rajdeepsingh/.bashrc\nYou can uninstall at any time with rustup self uninstall and\nthese changes will be reverted.\nCurrent installation options:\ndefault host triple: aarch64-unknown-linux-gnu\n     default toolchain: stable (default)\n               profile: default\n  modify PATH variable: yes\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n>1\ninfo: profile set to 'default'\ninfo: default host triple is aarch64-unknown-linux-gnu\ninfo: syncing channel updates for 'stable-aarch64-unknown-linux-gnu'\n686.2 KiB / 686.2 KiB (100 %) 170.5 KiB/s in  5s ETA:  0s\ninfo: latest update on 2022-02-24, rust version 1.59.0 (9d1b2106e 2022-02-23)\ninfo: downloading component 'cargo'\n  5.5 MiB /   5.5 MiB (100 %) 267.0 KiB/s in 23s ETA:  0s\ninfo: downloading component 'clippy'\n  2.3 MiB /   2.3 MiB (100 %) 275.9 KiB/s in 11s ETA:  0s\ninfo: downloading component 'rust-docs'\n 19.3 MiB /  19.3 MiB (100 %) 321.3 KiB/s in 59s ETA:  0s    \ninfo: downloading component 'rust-std'\n 31.6 MiB /  31.6 MiB (100 %) 540.1 KiB/s in  1m 38s ETA:  0s    \ninfo: downloading component 'rustc'\n 73.1 MiB /  73.1 MiB (100 %) 270.2 KiB/s in  4m 41s ETA:  0s    \ninfo: downloading component 'rustfmt'\n  3.4 MiB /   3.4 MiB (100 %) 294.1 KiB/s in 13s ETA:  0s\ninfo: installing component 'cargo'\n  5.5 MiB /   5.5 MiB (100 %)   5.3 MiB/s in  1s ETA:  0s\ninfo: installing component 'clippy'\ninfo: installing component 'rust-docs'\n 19.3 MiB /  19.3 MiB (100 %) 851.2 KiB/s in 38s ETA:  0s\n  8 IO-ops /   8 IO-ops (100 %)   5 IOPS in  1s ETA:  0s    \ninfo: installing component 'rust-std'\n 31.6 MiB /  31.6 MiB (100 %)   5.1 MiB/s in 25s ETA:  0s\ninfo: installing component 'rustc'\n 73.1 MiB /  73.1 MiB (100 %)   4.6 MiB/s in 35s ETA:  0s\n  5 IO-ops /   5 IO-ops (100 %)   0 IOPS in  8m  2s ETA: Unknown\ninfo: installing component 'rustfmt'\n  1 IO-ops /   1 IO-ops (100 %)   0 IOPS in 10s ETA: Unknown\ninfo: default toolchain set to 'stable-aarch64-unknown-linux-gnu'\nstable-aarch64-unknown-linux-gnu installed - rustc 1.59.0 (9d1b2106e 2022-02-23)\nRust is installed now. Great!\nTo get started you may need to restart your current shell.\nThis would reload your PATH environment variable to include\nCargo's bin directory ($HOME/.cargo/bin).\nTo configure your current shell, run:\nsource $HOME/.cargo/env\nrajdeepsingh@officialrajdeepsingh:/$\n```\n\n### How to delete or uninstall the rust lang?\n\nYou can uninstall the Rust with rustup. rustup in inbuild command utility in rust lang.\n\n```\nrustup self uninstall\n\n```\n\n---\n\n### Reference\n\n> https://www.rust-lang.org/tools/install\n\n---\n\n### Conclusion\n\nI hope my article solve your problem. If you have any queries, then ask in the comment section.\n\n\n\n","html":"<p>Installation of Rust in raspberry pi 4 and Ubuntu is a very easy process for all  Linux distros. You can install Rust with one single command. So simple, you copy and paste in your terminal.</p>\n<h3>Install Rust</h3>\n<pre><code class=\"language-command\">curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre>\n<p>After you paste the command in a terminal, the rust setup asks one question to start the installation rust in your distro.</p>\n<pre><code>rajdeepsingh@rajdeepsingh:/$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\ninfo: downloading installer\nWelcome to Rust!\n....\nCurrent installation options:\ndefault host triple: aarch64-unknown-linux-gnu\n     default toolchain: stable (default)\n               profile: default\n  modify PATH variable: yes\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n> 1\n</code></pre>\n<p>I select default rust installation in raspberry pi 4. so everything is mange by rust lang.</p>\n<h3>The rust command output</h3>\n<pre><code>rajdeepsingh@officialrajdeepsingh:/$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\ninfo: downloading installer\nWelcome to Rust!\nThis will download and install the official compiler for the Rust\nprogramming language, and its package manager, Cargo.\nRustup metadata and toolchains will be installed into the Rustup\nhome directory, located at:\n/home/rajdeepsingh/.rustup\nThis can be modified with the RUSTUP_HOME environment variable.\nThe Cargo home directory located at:\n/home/rajdeepsingh/.cargo\nThis can be modified with the CARGO_HOME environment variable.\nThe cargo, rustc, rustup and other commands will be added to\nCargo's bin directory, located at:\n/home/rajdeepsingh/.cargo/bin\nThis path will then be added to your PATH environment variable by\nmodifying the profile files located at:\n/home/rajdeepsingh/.profile\n  /home/rajdeepsingh/.bashrc\nYou can uninstall at any time with rustup self uninstall and\nthese changes will be reverted.\nCurrent installation options:\ndefault host triple: aarch64-unknown-linux-gnu\n     default toolchain: stable (default)\n               profile: default\n  modify PATH variable: yes\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n>1\ninfo: profile set to 'default'\ninfo: default host triple is aarch64-unknown-linux-gnu\ninfo: syncing channel updates for 'stable-aarch64-unknown-linux-gnu'\n686.2 KiB / 686.2 KiB (100 %) 170.5 KiB/s in  5s ETA:  0s\ninfo: latest update on 2022-02-24, rust version 1.59.0 (9d1b2106e 2022-02-23)\ninfo: downloading component 'cargo'\n  5.5 MiB /   5.5 MiB (100 %) 267.0 KiB/s in 23s ETA:  0s\ninfo: downloading component 'clippy'\n  2.3 MiB /   2.3 MiB (100 %) 275.9 KiB/s in 11s ETA:  0s\ninfo: downloading component 'rust-docs'\n 19.3 MiB /  19.3 MiB (100 %) 321.3 KiB/s in 59s ETA:  0s    \ninfo: downloading component 'rust-std'\n 31.6 MiB /  31.6 MiB (100 %) 540.1 KiB/s in  1m 38s ETA:  0s    \ninfo: downloading component 'rustc'\n 73.1 MiB /  73.1 MiB (100 %) 270.2 KiB/s in  4m 41s ETA:  0s    \ninfo: downloading component 'rustfmt'\n  3.4 MiB /   3.4 MiB (100 %) 294.1 KiB/s in 13s ETA:  0s\ninfo: installing component 'cargo'\n  5.5 MiB /   5.5 MiB (100 %)   5.3 MiB/s in  1s ETA:  0s\ninfo: installing component 'clippy'\ninfo: installing component 'rust-docs'\n 19.3 MiB /  19.3 MiB (100 %) 851.2 KiB/s in 38s ETA:  0s\n  8 IO-ops /   8 IO-ops (100 %)   5 IOPS in  1s ETA:  0s    \ninfo: installing component 'rust-std'\n 31.6 MiB /  31.6 MiB (100 %)   5.1 MiB/s in 25s ETA:  0s\ninfo: installing component 'rustc'\n 73.1 MiB /  73.1 MiB (100 %)   4.6 MiB/s in 35s ETA:  0s\n  5 IO-ops /   5 IO-ops (100 %)   0 IOPS in  8m  2s ETA: Unknown\ninfo: installing component 'rustfmt'\n  1 IO-ops /   1 IO-ops (100 %)   0 IOPS in 10s ETA: Unknown\ninfo: default toolchain set to 'stable-aarch64-unknown-linux-gnu'\nstable-aarch64-unknown-linux-gnu installed - rustc 1.59.0 (9d1b2106e 2022-02-23)\nRust is installed now. Great!\nTo get started you may need to restart your current shell.\nThis would reload your PATH environment variable to include\nCargo's bin directory ($HOME/.cargo/bin).\nTo configure your current shell, run:\nsource $HOME/.cargo/env\nrajdeepsingh@officialrajdeepsingh:/$\n</code></pre>\n<h3>How to delete or uninstall the rust lang?</h3>\n<p>You can uninstall the Rust with rustup. rustup in inbuild command utility in rust lang.</p>\n<pre><code>rustup self uninstall\n\n</code></pre>\n<hr>\n<h3>Reference</h3>\n<blockquote>\n<p>https://www.rust-lang.org/tools/install</p>\n</blockquote>\n<hr>\n<h3>Conclusion</h3>\n<p>I hope my article solve your problem. If you have any queries, then ask in the comment section.</p>"},"_id":"posts/how-to-install-rust-language-in-raspberry-pi-4-and-ubuntu.md","_raw":{"sourceFilePath":"posts/how-to-install-rust-language-in-raspberry-pi-4-and-ubuntu.md","sourceFileName":"how-to-install-rust-language-in-raspberry-pi-4-and-ubuntu.md","sourceFileDir":"posts","contentType":"markdown","flattenedPath":"posts/how-to-install-rust-language-in-raspberry-pi-4-and-ubuntu"},"type":"Post"}]},"__N_SSG":true}